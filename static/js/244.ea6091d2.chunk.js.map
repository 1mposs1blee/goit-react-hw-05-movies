{"version":3,"file":"static/js/244.ea6091d2.chunk.js","mappings":"kRAEaA,EAAiBC,EAAAA,EAAAA,IAAH,sBAEdC,EAAeD,EAAAA,EAAAA,GAAH,gDAIZE,EAAaF,EAAAA,EAAAA,GAAH,wGAMVG,EAAaH,EAAAA,EAAAA,EAAH,8CAIVI,EAAgBJ,EAAAA,EAAAA,EAAH,4C,SCwC1B,EA/CgB,WACd,OAA8BK,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAEKC,EAAAA,EAAAA,oBACzBJ,EACA,YAJoB,OAEhBK,EAFgB,OAOtBN,EAAeM,EAAaC,SAPN,gDAStBC,QAAQC,MAAM,0NAAd,MAEAC,MAAM,sRAXgB,yBAatBZ,GAAW,GAbW,4EAAH,qDAiBvBM,GACD,GAAE,CAACH,KAGF,SAACX,EAAD,UACGO,EAAU,KAAOE,EAAYY,QAC5B,iCACE,SAACnB,EAAD,6BACA,wBACGO,EAAYa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACf,UAACtB,EAAD,YACE,SAACC,EAAD,UAAamB,KACb,SAAClB,EAAD,UAAgBoB,MAFDD,EADF,SASrB,oMAIP,C,8DCtDKE,EACJ,sNACIC,EAAW,gCAEXC,EAAmB,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAChEG,OAAQ,CACNC,SAAS,SAEXC,QAAS,CACPC,cAAc,UAAD,OAAYP,MANH,cACpBQ,EADoB,yBAUnBA,EAASC,KAAKlB,SAVK,2CAAH,qDAanBmB,EAAkB,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gBAAqC,CAC1DG,OAAQ,CACNC,SAAS,QACTO,MAAOD,GAETL,QAAS,CACPC,cAAc,UAAD,OAAYP,MAPJ,cACnBQ,EADmB,yBAWlBA,EAASC,KAAKlB,SAXI,2CAAH,sDAclBsB,EAAmB,mCAAG,WAAO5B,GAAP,4FAAgB6B,EAAhB,+BAA+B,GAA/B,SACHX,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDhB,GADC,OACS6B,GAC9B,CACEV,OAAQ,CACNC,SAAU,SAEZC,QAAS,CACPC,cAAc,UAAD,OAAYP,MARL,cACpBQ,EADoB,yBAanBA,EAASC,MAbU,2CAAH,sDAgBnBpB,EAAY,CAChBa,oBAAAA,EACAQ,mBAAAA,EACAG,oBAAAA,GAGF,K","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsWrapper = styled.div``;\n\nexport const ReviewsTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const ReviewItem = styled.li`\n  border: 1px solid rgb(204, 204, 204);\n  padding: 10px;\n  margin: 10px 0px;\n`;\n\nexport const ReviewName = styled.p`\n  font-weight: bold;\n`;\n\nexport const ReviewContent = styled.p`\n  margin-top: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesApi from 'services/movies-api';\nimport {\n  ReviewItem,\n  ReviewName,\n  ReviewContent,\n  ReviewsTitle,\n  ReviewsWrapper,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [loading, setLoading] = useState(true);\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const movieReviews = await moviesApi.fetchDetailsByMovie(\n          movieId,\n          '/reviews'\n        );\n\n        setReviewsInfo(movieReviews.results);\n      } catch (error) {\n        console.error('Помилка при завантажені відгуків фільму:', error);\n\n        alert('Щось пішло не так. Будь ласка, перезавантажте додаток.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsWrapper>\n      {loading ? null : reviewsInfo.length ? (\n        <>\n          <ReviewsTitle>Movie Reviews</ReviewsTitle>\n          <ul>\n            {reviewsInfo.map(({ author, id, content }) => (\n              <ReviewItem key={id}>\n                <ReviewName>{author}</ReviewName>\n                <ReviewContent>{content}</ReviewContent>\n              </ReviewItem>\n            ))}\n          </ul>\n        </>\n      ) : (\n        'Не було знайдено відгуків за фільмом.'\n      )}\n    </ReviewsWrapper>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNGY2NzJlZmY2YTVlNDE4NjcyN2EyZDA3ZmFmNzY4NCIsInN1YiI6IjY0ZjMxMWZkNWYyYjhkMDBhYmNhMjkwZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.HiQ0g4bmTHxdwn97dRqSfMIbv4ALG5BCKuJOPjN1fOA';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      language: `en-US`,\n    },\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n\n  return response.data.results;\n};\n\nconst fetchMoviesByQuery = async searchQuery => {\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      language: `en-US`,\n      query: searchQuery,\n    },\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n\n  return response.data.results;\n};\n\nconst fetchDetailsByMovie = async (movieId, optionDetail = '') => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}${optionDetail}`,\n    {\n      params: {\n        language: 'en-US',\n      },\n      headers: {\n        Authorization: `Bearer ${API_KEY}`,\n      },\n    }\n  );\n\n  return response.data;\n};\n\nconst moviesApi = {\n  fetchTrendingMovies,\n  fetchMoviesByQuery,\n  fetchDetailsByMovie,\n};\n\nexport default moviesApi;\n"],"names":["ReviewsWrapper","styled","ReviewsTitle","ReviewItem","ReviewName","ReviewContent","useState","loading","setLoading","reviewsInfo","setReviewsInfo","movieId","useParams","useEffect","fetchMovieReviews","moviesApi","movieReviews","results","console","error","alert","length","map","author","id","content","API_KEY","BASE_URL","fetchTrendingMovies","axios","params","language","headers","Authorization","response","data","fetchMoviesByQuery","searchQuery","query","fetchDetailsByMovie","optionDetail"],"sourceRoot":""}