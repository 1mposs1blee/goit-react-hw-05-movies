{"version":3,"file":"static/js/76.6d413f2a.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li``;\n\nexport const Link = styled(NavLink)`\n  margin-bottom: 5px;\n\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaFilm } from 'react-icons/fa';\nimport { List, ListItem, Link } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ title, id }) => (\n        <ListItem key={id}>\n          <Link to={`${id}`} state={{ from: location }}>\n            <FaFilm />\n            {title}\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form``;\n\nexport const SearchTitle = styled.h1`\n  margin-bottom: 10px;\n  font-size: 30px;\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  font-size: 16px;\n  border-radius: 4px;\n`;\n\nexport const FormButton = styled.button`\n  width: 130px;\n  height: 30px;\n  border-radius: 4px;\n  background-color: rgb(63, 81, 181);\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgb(255, 255, 255);\n  border: none;\n  cursor: pointer;\n\n  &:disabled {\n    background-color: gray;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Input,\n  FormButton,\n  SearchTitle,\n  FormWrapper,\n} from './SearchBox.styled';\n\nconst SearchBox = ({ onFormSubmit, startValue }) => {\n  const [inputValue, setInputValue] = useState(startValue);\n\n  const onChangeValue = e => {\n    const value = e.target.value;\n\n    setInputValue(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const normalizedInputValue = inputValue.trim().toLowerCase();\n\n    onFormSubmit(normalizedInputValue);\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <SearchTitle>Search Movies</SearchTitle>\n      <FormWrapper>\n        <Input\n          placeholder=\"Search movies...\"\n          autoFocus\n          type=\"text\"\n          value={inputValue}\n          onChange={onChangeValue}\n        />\n        <FormButton type=\"submit\" disabled={!inputValue}>\n          Search\n        </FormButton>\n      </FormWrapper>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n  startValue: PropTypes.string.isRequired,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBox from 'components/SearchBox';\nimport MoviesList from 'components/MoviesList';\nimport moviesApi from 'services/movies-api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        const moviesByQuery = await moviesApi.fetchMoviesByQuery(searchQuery);\n\n        setMovies(moviesByQuery);\n      } catch (error) {\n        console.error(\n          'Помилка при завантажені фільмів за пошуковим запитом:',\n          error\n        );\n\n        alert('Щось пішло не так. Будь ласка, перезавантажте додаток.');\n      }\n    };\n\n    fetchMovies();\n  }, [searchQuery]);\n\n  const formSubmit = query => {\n    if (query === searchQuery) {\n      alert('Ви ввели той самий пошуковий запит.');\n\n      return;\n    }\n\n    const nextParams = query !== '' ? { query } : {};\n\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <SearchBox onFormSubmit={formSubmit} startValue={searchQuery} />\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <MoviesList movies={movies} />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNGY2NzJlZmY2YTVlNDE4NjcyN2EyZDA3ZmFmNzY4NCIsInN1YiI6IjY0ZjMxMWZkNWYyYjhkMDBhYmNhMjkwZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.HiQ0g4bmTHxdwn97dRqSfMIbv4ALG5BCKuJOPjN1fOA';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      language: `en-US`,\n    },\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n\n  return response.data.results;\n};\n\nconst fetchMoviesByQuery = async searchQuery => {\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      language: `en-US`,\n      query: searchQuery,\n    },\n    headers: {\n      Authorization: `Bearer ${API_KEY}`,\n    },\n  });\n\n  return response.data.results;\n};\n\nconst fetchDetailsByMovie = async (movieId, optionDetail = '') => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}${optionDetail}`,\n    {\n      params: {\n        language: 'en-US',\n      },\n      headers: {\n        Authorization: `Bearer ${API_KEY}`,\n      },\n    }\n  );\n\n  return response.data;\n};\n\nconst moviesApi = {\n  fetchTrendingMovies,\n  fetchMoviesByQuery,\n  fetchDetailsByMovie,\n};\n\nexport default moviesApi;\n"],"names":["List","styled","ListItem","Link","NavLink","movies","location","useLocation","map","title","id","to","state","from","Form","SearchTitle","FormWrapper","Input","FormButton","onFormSubmit","startValue","useState","inputValue","setInputValue","onSubmit","e","preventDefault","normalizedInputValue","trim","toLowerCase","placeholder","autoFocus","type","value","onChange","target","disabled","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchMovies","moviesApi","moviesByQuery","console","error","alert","query","Suspense","fallback","MoviesList","API_KEY","BASE_URL","fetchTrendingMovies","axios","params","language","headers","Authorization","response","data","results","fetchMoviesByQuery","fetchDetailsByMovie","movieId","optionDetail"],"sourceRoot":""}